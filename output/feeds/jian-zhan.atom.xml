<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>我的精神家园</title><link href="/" rel="alternate"></link><link href="/feeds/jian-zhan.atom.xml" rel="self"></link><id>/</id><updated>2016-03-04T00:00:00+08:00</updated><entry><title>Ubuntu下Pelican + Apache 搭建个人博客</title><link href="/blog/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.html" rel="alternate"></link><updated>2016-03-04T00:00:00+08:00</updated><author><name>Friday</name></author><id>tag:,2016-03-03:blog/博客搭建.html</id><summary type="html">&lt;h1 id="ubuntupelican-apache"&gt;Ubuntu下Pelican + Apache 搭建个人博客&lt;/h1&gt;
&lt;h2 id="_1"&gt;搭建环境&lt;/h2&gt;
&lt;p&gt;Ubuntu 14.04 LTS
Pelican 3.3.0
Apache 2.4.0
VPS：  digital ocean SFO（非必须，可已选择github page）
域名解析：Godaddy&lt;/p&gt;
&lt;h2 id="_2"&gt;环境配置&lt;/h2&gt;
&lt;p&gt;安装pelican
&lt;code&gt;pip install pelican&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;创建blog目录&lt;br /&gt;
&lt;code&gt;cd /var/www&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;mkdir blog&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;pelican-quickstart&lt;/code&gt;
之后终端会问几个问题，一路默认回车就行（有一个要填一下，不过这些都可以在后来生成的pelicanconf.py文件中修改的）&lt;br /&gt;
生成的目录结构如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;blog/
├── content                # 存放输入的markdown或RST源文件
│   └── (pages)            # 存放手工创建的静态页面，可选
│   └── (posts)            # 存放手工创建的文章，可选
├── output                 # 存放最终生成的静态博客
├── develop_server.sh      # 测试服务器
├── Makefile               # 管理博客的Makefile
├── pelicanconf.py         # 配置文件
└── publishconf.py         # 发布文件，可删除&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;主题和插件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;克隆主题到本地
&lt;code&gt;git clone https://github.com/getpelican/pelican-themes.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装主题——bootstrap3
&lt;code&gt;cd pelican-themes&lt;/code&gt;
&lt;code&gt;pelican-themes -i pelican-bootstrap3&lt;/code&gt;
这一步是将主题&lt;code&gt;pelican-bootstrap3&lt;/code&gt;安装到Python库里，Ubuntu下路径为&lt;code&gt;/usr/local/lib/python2.7/dist-packages/pelican/themes/&lt;/code&gt;,所以后面修改字体和banner时需要在这个文件夹下的&lt;code&gt;pelican-bootstrap3/templates&lt;/code&gt;文件修改
*克隆插件到本地
&lt;code&gt;cd /var/www/blog&lt;/code&gt;
&lt;code&gt;git clone git://github.com/getpelican/pelican-plugins.git&lt;/code&gt;
此处将pelican的插件放在&lt;code&gt;/var/www/blog&lt;/code&gt;的文件夹下&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="pelicanconfpy"&gt;配置pelicanconf.py&lt;/h2&gt;
&lt;p&gt;博客的很多内容都是在&lt;code&gt;/var/www/blog/pelicancof.py&lt;/code&gt;文件中配置的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;AUTHOR = u&amp;#39;Friday&amp;#39;
SITENAME = u&amp;#39;\u6211\u7684\u7cbe\u795e\u5bb6\u56ed&amp;#39; 博客名字
SITEURL = &amp;#39;http://localhost:80&amp;#39; 
TIMEZONE = &amp;#39;Asia/Shanghai&amp;#39; 时区改成上海
THEME = &amp;#39;pelican-bootstrap3&amp;#39;主题设置为pelican-bootstrap3

添加社交账号
SOCIAL = ((&amp;#39;facebook&amp;#39;, &amp;#39;https://www.facebook.com/li.dongyong?ref=bookmarks&amp;#39;),
          (&amp;#39;twitter&amp;#39;,&amp;#39;https://twitter.com/dongyongli&amp;#39;),
          (&amp;#39;github&amp;#39;,&amp;#39;https://github.com/Friday21&amp;#39;),)

DEFAULT_PAGINATION = 5 每页显示5篇文章

PLUGIN_PATHS = [u&amp;#39;pelican-plugins&amp;#39;,]插件地址，因为插件放在了和blog同级目录，所以可以       直接用pelican-plugins, 若放在其他地方改成相应路径即可
PLUGINS = [&amp;#39;sitemap&amp;#39;, &amp;#39;related_posts&amp;#39;, &amp;#39;random_article&amp;#39;,
           &amp;#39;liquid_tags.img&amp;#39;, &amp;#39;liquid_tags.video&amp;#39;,
           &amp;#39;liquid_tags.youtube&amp;#39;, &amp;#39;liquid_tags.vimeo&amp;#39;,
           &amp;#39;liquid_tags.include_code&amp;#39;,&amp;#39;tag_cloud&amp;#39;,&amp;#39;tipue_search&amp;#39;]使用到的插件
RANDOM = &amp;#39;random.html&amp;#39;
RELATED_POSTS_MAX = 10
DIRECT_TEMPLATES = (&amp;#39;index&amp;#39;, &amp;#39;categories&amp;#39;, &amp;#39;authors&amp;#39;, &amp;#39;archives&amp;#39;, &amp;#39;tags&amp;#39;,&amp;#39;search&amp;#39;)
ARTICLE_URL = &amp;#39;blog/{slug}.html&amp;#39;
ARTICLE_SAVE_AS = &amp;#39;blog/{slug}.html&amp;#39;
PAGE_URL = &amp;#39;{slug}.html&amp;#39;
PAGE_SAVE_AS = &amp;#39;{slug}.html&amp;#39;
TAG_URL = &amp;#39;tags/{slug}.html&amp;#39;
TAG_SAVE_AS = &amp;#39;tags/{slug}.html&amp;#39;
TAGS_URL = &amp;#39;tags.html&amp;#39;
DISPLAY_CATEGORIES_ON_MENU = False
DISPLAY_CATEGORIES_ON_SIDEBAR = False 不显示categories（感觉有tags就够了）
DISPLAY_TAGS_ON_SIDEBAR = True 在边上显示标签栏
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_4"&gt;发布第一篇博客&lt;/h2&gt;
&lt;p&gt;用markdown写下第一篇文章，开头要包含以下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="err"&gt;必须&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="err"&gt;必须&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publishing&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="err"&gt;必须&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt; &lt;span class="n"&gt;Metaireau&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Conan&lt;/span&gt; &lt;span class="n"&gt;Doyle&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;写好后把md文件放在blog下的content目录中，发布博客
&lt;code&gt;cd /var/www/blog&lt;/code&gt;
&lt;code&gt;make publish&lt;/code&gt;
如果成功的话可以在blog目录下看到output文件夹，里面就是网站的所有内容，将其部署到github pages上即可以访问，在github创建username.github.io repo，其中username为你github的用户名，然后在Ubuntu上把博客内容推送到github pages上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/www/blog/output
git init
git add .
git commit -m&amp;#39;first commit&amp;#39;
git remote add origin git@github.com:username/username.github.io.git
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;成功后访问username.github.io即能成功看到你的blog&lt;/p&gt;
&lt;h2 id="apache"&gt;Apache 配置&lt;/h2&gt;
&lt;p&gt;如果不想用github page当然也可以用自己的VPS，让blog运行在Apache上
&lt;em&gt; 安装Apache
&lt;code&gt;sudo apt-get install apache2&lt;/code&gt;
&lt;/em&gt; 配置虚拟主机
&lt;code&gt;cd /etc/apache2/sites-available/&lt;/code&gt;
新建blog的配置文件
&lt;code&gt;vim blog.conf&lt;/code&gt; 
添加如下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="err"&gt;/var/www/blog/output&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; #博客目录
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="err"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    # Admin email, Server Name (domain name) and any aliases
    ServerAdmin lidongyong22@gmail.com 
    ServerName  fridayhaohao.com 服务器名字
    ServerAlias www.fridayhaohao.com #域名

    # Index file and Document Root (where the public files are located)
    DirectoryIndex index.php index.html
    DocumentRoot /var/www/blog/output 文件目录
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使文件生效：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo a2ensite duncanlock.test
$ sudo service apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;成功后需要在godaday上将你的域名连接到服务器上的ip， 在DNS ZONE FILE下添加一天A记录，HOST：@，POINTS TO: 你的服务器IP，等待一段时间后就可以通过你的域名来访问你的blog啦！&lt;/p&gt;
&lt;h2 id="_5"&gt;进一步完善博客&lt;/h2&gt;
&lt;h3 id="banner"&gt;banner&lt;/h3&gt;
&lt;h3 id="_6"&gt;字体&lt;/h3&gt;
&lt;h3 id="bootstrap"&gt;bootstrap主题&lt;/h3&gt;
&lt;h3 id="_7"&gt;多说评论&lt;/h3&gt;
&lt;h3 id="google"&gt;Google站内搜索&lt;/h3&gt;
&lt;h3 id="_8"&gt;表格的添加技巧&lt;/h3&gt;</summary><category term="pelican"></category><category term="python"></category></entry></feed>